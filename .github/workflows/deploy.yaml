name: CI / CD

on:
  push:
    branches: [deploy]

jobs:
  CI:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      IMAGE_NAME: flask-app
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Cloud SDK 설정
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Docker를 위한 gcloud 인증 설정
        run: gcloud auth configure-docker --quiet

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  CD:
    runs-on: ubuntu-latest
    needs: CI

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      IMAGE_NAME: flask-app
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: 배포 서버에 SSH로 연결하여 배포
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          envs: GCP_PROJECT_ID, IMAGE_NAME, IMAGE_TAG
          script: |
            # 기존 컨테이너 중지 및 제거
            if [ $(sudo docker ps -q -f name=${IMAGE_NAME}) ]; then
              sudo docker stop ${IMAGE_NAME}
              sudo docker rm ${IMAGE_NAME}
            fi

            # 기존 Docker 이미지가 있을 경우 삭제
            if [ $(sudo docker images -q gcr.io/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}) ]; then
              sudo docker rmi gcr.io/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}
            fi

            # Google Container Registry에서 Docker 이미지 가져오기
            sudo docker login -u _json_key --password-stdin https://gcr.io <<< '${{ secrets.GCP_SA_KEY }}'
            sudo docker pull gcr.io/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}

            # 새로운 컨테이너 실행
            sudo docker run -d \
              --name ${IMAGE_NAME} \
              -p 5000:5000 \
              gcr.io/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}
